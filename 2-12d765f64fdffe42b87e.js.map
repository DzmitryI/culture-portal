{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/image.js","webpack:///./src/components/Link.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/logo.png","webpack:///./src/components/translate/translate.jsx","webpack:///./src/components/translate/index.js","webpack:///./src/components/header/header.jsx","webpack:///./src/components/header/index.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","a","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","createElement","Fragment","props","children","Consumer","m","module","exports","require","default","Photo","imgsrc","className","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","gatsby_image__WEBPACK_IMPORTED_MODULE_5___default","fluid","allImageSharp","edges","find","element","node","src","split","pop","_public_static_d_2372938540_json__WEBPACK_IMPORTED_MODULE_2__","Link","to","rest","_objectWithoutPropertiesLoose","lng","i18n","language","react__WEBPACK_IMPORTED_MODULE_5___default","gatsby__WEBPACK_IMPORTED_MODULE_6__","Object","assign","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","p","Translate","t","useTranslation","_useState","useState","value","setCount","react_default","Form_default","Group","Control","as","onChange","event","locale","changeLanguage","page","window","pathname","slice","join","console","log","navigate","target","Header","Navbar","expand","Brand","Image","logo","Toggle","aria-controls","Collapse","id","Nav","Item","activeStyle","color","components_translate","Layout","_856328897","style","margin","paddingTop","components_header","siteTitle","site","siteMetadata","title","fontSize"],"mappings":"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","file":"2-12d765f64fdffe42b87e.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\n\nconst Photo = ({ imgsrc, className }) => (\n  <StaticQuery\n    query={graphql`\n          query {\n            allImageSharp {\n              edges {\n                node {\n                  fluid(maxWidth: 920, quality: 100) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        `}\n    render={data => (\n      <Img className={className} fluid={data.allImageSharp.edges.find(element => (element.node.fluid.src.split('/').pop() === imgsrc)).node.fluid} />\n    )}\n  />\n);\n\nexport default Photo;\n\n// const Image = () => {\n//   const data = useStaticQuery(graphql`\n//     query {\n//       placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n//         childImageSharp {\n//           fluid(maxWidth: 300) {\n//             ...GatsbyImageSharpFluid\n//           }\n//         }\n//       }\n//     }\n//   `);\n//\n//   return <Img fluid={data.placeholderImage.childImageSharp.fluid} />;\n// };\n//\n// export default Image;\n","/**\n* Wrapper for Link to use language in path\n* Based on i18n Link: gatsby-i18n-plugin/packages/gatsby-i18n/src/Link.js\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link as GatsbyLink } from 'gatsby';\nimport i18n from 'i18next';\n\nconst Link = ({ to, children, ...rest }) => {\n  const lng = i18n.language;\n  return (\n    <GatsbyLink to={lng ? `/${lng}${to}` : `${to}`} {...rest}>\n      {children}\n    </GatsbyLink>\n  );\n};\n\nLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Link;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/logo-219b093fcceb2f008ded958fa9b13fca.png\";","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { useTranslation } from 'react-i18next';\nimport { navigate } from 'gatsby';\nimport i18n from 'i18next';\n\nconst Translate = () => {\n  const { t } = useTranslation();\n  const [value, setCount] = useState(i18n.language);\n\n  const changeLanguage = (locale) => {\n    i18n.changeLanguage(locale);\n    // eslint-disable-next-line no-undef\n    const page = window.location.pathname.split('/').slice(3).join('/');\n    console.log(`navigate to: ${window.location.pathname.split('/')}, page: ${page}`);\n    navigate(`/${locale}/${page}`);\n  };\n\n  const handleChange = (event) => {\n    changeLanguage(`${event.target.value}`);\n    setCount(`${event.target.value}`);\n  };\n\n  return (\n    <Form className=\"select-language\">\n      <Form.Group className=\"mb-0\">\n        <Form.Control as=\"select\" value={value} onChange={handleChange}>\n          <option value=\"ru\">{t('russian')}</option>\n          <option value=\"by\">{t('belorussian')}</option>\n          <option value=\"en\">{t('english')}</option>\n        </Form.Control>\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default Translate;\n","import Translate from './translate';\n\nimport './translate.css';\n\nexport default Translate;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Navbar, Nav, Image } from 'react-bootstrap';\nimport Link from '../Link';\nimport Translate from '../translate';\nimport logo from '../../images/logo.png';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Header = () => {\n  const { t } = useTranslation();\n  return (\n    <header>\n      <Navbar expand=\"md\">\n        <Navbar.Brand><Link to=\"/\"><Image src={logo} /></Link></Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navbar\" />\n        <Navbar.Collapse id=\"navbar\">\n          <Nav>\n            <div className=\"wrapper\">\n              <Nav.Item><Link to=\"/\" activeStyle={{ color: '#40589A' }} className=\"menuLink\">{t('menu.main')}</Link></Nav.Item>\n              <Nav.Item><Link to=\"/search\" activeStyle={{ color: '#40589A' }} className=\"menuLink\">{t('menu.search')}</Link></Nav.Item>\n            </div>\n            <Nav.Item><Translate /></Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import Header from './header';\n\nimport './header.scss';\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Header from './header';\nimport './layout.css';\nimport './style/mainStyles.scss';\n// import MainSlider from './main-slider';\n\nconst Layout = () => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <div\n        style={{\n          margin: '0 auto',\n          // maxWidth: 960,\n          // padding: '0px 1.0875rem 1.45rem',\n          paddingTop: 0,\n        }}\n      >\n        <Header siteTitle={data.site.siteMetadata.title} style={{ fontSize: '.7em' }} />\n        {/* <MainSlider /> */}\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n"],"sourceRoot":""}