{"version":3,"sources":["webpack:///./src/components/image.js","webpack:///./src/components/video/index.js","webpack:///./src/components/video/video.jsx","webpack:///./src/templates/about-author.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Link.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/logo.png","webpack:///./src/components/translate/translate.jsx","webpack:///./src/components/translate/index.js","webpack:///./src/components/header/header.jsx","webpack:///./src/components/header/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/timeLine/timeLine.jsx","webpack:///./src/components/timeLine/index.js"],"names":["Photo","_ref","imgsrc","className","react_default","a","createElement","gatsby_browser_entry","query","render","data","gatsby_image_default","fluid","allImageSharp","edges","find","element","node","src","split","pop","_876711915","Video","props","_this","_React$Component","call","this","state","isOpen","openModal","bind","_assertThisInitialized","setState","_this2","_this$props","youtubeId","options","start","color","autoplay","lib_default","channel","videoId","youtube","onClose","Button","variant","size","role","onClick","React","Component","Template","frontmatter","javascriptFrontmatter","layout","name","birthDate","description","components_image","authorImage","science","components_video","youtubeStart","timeLine","pageQuery","defaultProps","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Fragment","children","Consumer","m","module","exports","require","default","Link","to","rest","_objectWithoutPropertiesLoose","lng","i18n","language","react__WEBPACK_IMPORTED_MODULE_5___default","gatsby__WEBPACK_IMPORTED_MODULE_6__","Object","assign","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","p","Translate","_useTranslation","useTranslation","t","_useState","useState","value","setCount","Form_default","Group","Control","as","onChange","event","locale","changeLanguage","page","window","pathname","slice","join","console","log","navigate","target","Header","Navbar","expand","Brand","Image","logo","Toggle","aria-controls","Collapse","id","Nav","Item","activeStyle","components_translate","Layout","_856328897","style","margin","maxWidth","padding","paddingTop","components_header","siteTitle","site","siteMetadata","title","TimeLine","activity","returnObjects","result","keys","map","key","sort","dist","lineColor","el","uniqueId","dateText","dateInnerStyle","background","bodyContainerStyle","textAlign"],"mappings":"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","file":"component---src-templates-about-author-jsx-ec79031998fba98b9094.js","sourcesContent":["import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\n\nconst Photo = ({ imgsrc, className }) => (\n  <StaticQuery\n    query={graphql`\n          query {\n            allImageSharp {\n              edges {\n                node {\n                  fluid(maxWidth: 300){\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        `}\n    render={data => (\n      <Img className={className} fluid={data.allImageSharp.edges.find(element => (element.node.fluid.src.split('/').pop() === imgsrc)).node.fluid} />\n    )}\n  />\n);\n\nexport default Photo;\n\n// const Image = () => {\n//   const data = useStaticQuery(graphql`\n//     query {\n//       placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n//         childImageSharp {\n//           fluid(maxWidth: 300) {\n//             ...GatsbyImageSharpFluid\n//           }\n//         }\n//       }\n//     }\n//   `);\n//\n//   return <Img fluid={data.placeholderImage.childImageSharp.fluid} />;\n// };\n//\n// export default Image;\n","import Video from './video';\nimport './video.css';\n\nexport default Video;\n","import React from 'react';\nimport ModalVideo from 'react-modal-video';\nimport { Button } from 'react-bootstrap';\nimport './video.css';\n\n\nclass Video extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n    this.openModal = this.openModal.bind(this);\n  }\n\n  openModal() {\n    this.setState({ isOpen: true });\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const { youtubeId, start } = this.props;\n    const options = {\n      start,\n      color: 'white',\n      autoplay: 1,\n    };\n    return (\n      <div className=\"video-block\">\n        <ModalVideo\n          channel=\"youtube\"\n          isOpen={isOpen}\n          videoId={youtubeId}\n          youtube={options}\n          color=\"white\"\n          onClose={() => this.setState({ isOpen: false })}\n        />\n        <Button variant=\"light\" size=\"lg\" className=\"video-button\" role=\"button\" onClick={this.openModal}>Open Video</Button>\n      </div>\n    );\n  }\n}\n\nexport default Video;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport Photo from '../components/image';\n\nimport Layout from '../components/layout';\nimport TimeLine from '../components/timeLine';\nimport Video from '../components/video';\n\nimport './about-author.css';\n\nexport default function Template(props) {\n  const { data } = props;\n  const { frontmatter } = data.javascriptFrontmatter;\n\n  return (\n    <Layout>\n      <div className=\"blog-post\">\n        <h1>{frontmatter.name}</h1>\n        <p>{frontmatter.birthDate}</p>\n        <p>{frontmatter.description}</p>\n        <Photo className=\"avatar\" imgsrc={frontmatter.authorImage} />\n        <p>{frontmatter.science}</p>\n        <Video youtubeId={frontmatter.youtube} start={frontmatter.youtubeStart || 0} />\n        <TimeLine />\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($searchPath: String!, $lang: String!) {\n    javascriptFrontmatter(frontmatter: {path: {eq: $searchPath}, lng: {eq: $lang}}) {\n    frontmatter {\n      birthDate\n      name\n      science\n      authorImage\n      youtube\n      youtubeStart\n    }\n  }\n  }\n`;\n\nTemplate.defaultProps = {\n  data: {},\n};\n\nTemplate.propTypes = {\n  data: PropTypes.shape({\n    javascriptFrontmatter: PropTypes.object,\n  }),\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n* Wrapper for Link to use language in path\n* Based on i18n Link: gatsby-i18n-plugin/packages/gatsby-i18n/src/Link.js\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link as GatsbyLink } from 'gatsby';\nimport i18n from 'i18next';\n\nconst Link = ({ to, children, ...rest }) => {\n  const lng = i18n.language;\n  return (\n    <GatsbyLink to={lng ? `/${lng}${to}` : `${to}`} {...rest}>\n      {children}\n    </GatsbyLink>\n  );\n};\n\nLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Link;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/logo-d0d29f8a8bcfbff327902b08e3e073f5.png\";","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { useTranslation } from 'react-i18next';\nimport { navigate } from 'gatsby';\n\nconst Translate = () => {\n  const { t, i18n } = useTranslation();\n  const [value, setCount] = useState(i18n.language);\n\n  const changeLanguage = (locale) => {\n    i18n.changeLanguage(locale);\n    // eslint-disable-next-line no-undef\n    const page = window.location.pathname.split('/').slice(3).join('/');\n    // for production use .slice(3)\n    // const page = window.location.pathname.split('/').slice(3).join('/');\n    console.log('go to: ', `locale: ${locale}, page: ${page}`);\n    navigate(`/${locale}/${page}`);\n  };\n\n  const handleChange = (event) => {\n    changeLanguage(`${event.target.value}`);\n    setCount(`${event.target.value}`);\n  };\n\n  return (\n    <Form className=\"select-language\">\n      <Form.Group className=\"mb-0\">\n        <Form.Control as=\"select\" value={value} onChange={handleChange}>\n          <option value=\"ru\">{t('russian')}</option>\n          <option value=\"by\">{t('belorussian')}</option>\n          <option value=\"en\">{t('english')}</option>\n        </Form.Control>\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default Translate;\n","import Translate from './translate';\n\nimport './translate.css';\n\nexport default Translate;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Navbar, Nav, Image } from 'react-bootstrap';\nimport Link from '../Link';\nimport Translate from '../translate';\nimport logo from '../../images/logo.png';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Header = () => {\n  const { t } = useTranslation();\n  return (\n    <header>\n      <Navbar expand=\"md\">\n        <Navbar.Brand><Link to=\"/\"><Image src={logo} /></Link></Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navbar\" />\n        <Navbar.Collapse id=\"navbar\">\n          <Nav>\n            <div className=\"wrapper\">\n              <Nav.Item><Link to=\"/\" activeStyle={{ color: '#A07092' }} className=\"menuLink\">{t('menu.main')}</Link></Nav.Item>\n              <Nav.Item><Link to=\"/search\" activeStyle={{ color: '#A07092' }} className=\"menuLink\">{t('menu.search')}</Link></Nav.Item>\n            </div>\n            <Nav.Item><Translate /></Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import Header from './header';\n\nimport './header.scss';\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Header from './header';\nimport './layout.css';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <div\n        style={{\n          margin: '0 auto',\n          maxWidth: 960,\n          padding: '0px 1.0875rem 1.45rem',\n          paddingTop: 0,\n        }}\n      >\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main>{children}</main>\n        <footer>\n          © Портал белорусских фотографов 2019\n        </footer>\n      </div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport { uniqueId } from 'lodash';\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\nimport { useTranslation } from 'react-i18next';\n\nconst TimeLine = () => {\n  const id = 0;\n  const { t } = useTranslation();\n  const activity = t(`authors.${id}.activity`, { returnObjects: true });\n  const result = Object.keys(activity).map(key => [key, activity[key]]).sort();\n  return (\n    <div className=\"timeline_wrapper\">\n      <h3 className=\"timeline_title\">{t('timeline')}</h3>\n      <Timeline lineColor=\"#38292F\">\n        {result.map(el => (\n          <TimelineItem\n            key={uniqueId()}\n            dateText={el[0]}\n            dateInnerStyle={{\n              background: '#38292F',\n              color: '#FFF',\n            }}\n            bodyContainerStyle={{\n              textAlign: 'left',\n              color: '#000',\n            }}\n          >\n            {el[1]}\n          </TimelineItem>\n        ))}\n      </Timeline>\n    </div>\n  );\n};\n\nexport default TimeLine;\n","import TimeLine from './timeLine';\n\nimport './timeLine.css';\n\nexport default TimeLine;\n"],"sourceRoot":""}