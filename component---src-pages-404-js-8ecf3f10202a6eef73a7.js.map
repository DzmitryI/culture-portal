{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Link.js","webpack:///./src/images/logo.png","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/translate/translate.jsx","webpack:///./src/components/translate/index.js","webpack:///./src/components/header/header.jsx","webpack:///./src/components/header/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_components_Link__WEBPACK_IMPORTED_MODULE_3__","_images_logo_png__WEBPACK_IMPORTED_MODULE_4__","_images_logo_png__WEBPACK_IMPORTED_MODULE_4___default","NotFoundPage","a","createElement","style","margin","title","alt","src","Logo","to","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","Link","rest","_objectWithoutPropertiesLoose","lng","i18n","language","react__WEBPACK_IMPORTED_MODULE_5___default","gatsby__WEBPACK_IMPORTED_MODULE_6__","Object","assign","p","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","Translate","_useTranslation","useTranslation","t","_useState","useState","value","setCount","react_default","Form_default","className","Group","Control","as","onChange","event","locale","changeLanguage","page","window","pathname","split","slice","join","navigate","target","Header","Navbar","expand","Brand","Image","logo","Toggle","aria-controls","Collapse","id","Nav","Item","activeStyle","color","components_translate","Layout","_856328897","paddingTop","components_header","siteTitle","site","siteMetadata","fontSize","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-404-js-8ecf3f10202a6eef73a7.js","sourcesContent":["import React from 'react';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Link from '../components/Link';\nimport Logo from '../images/logo.png';\n\nconst NotFoundPage = () => (\n  <div style={{ margin: '50px, 50px' }}>\n    <SEO title=\"404: Not found\" />\n    <img alt=\"logo\" src={Logo} />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    <Link to=\"/\">Back to Main page</Link>\n  </div>\n);\n\nexport default NotFoundPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n* Wrapper for Link to use language in path\n* Based on i18n Link: gatsby-i18n-plugin/packages/gatsby-i18n/src/Link.js\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link as GatsbyLink } from 'gatsby';\nimport i18n from 'i18next';\n\nconst Link = ({ to, children, ...rest }) => {\n  const lng = i18n.language;\n  return (\n    <GatsbyLink to={lng ? `/${lng}${to}` : `${to}`} {...rest}>\n      {children}\n    </GatsbyLink>\n  );\n};\n\nLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Link;\n","module.exports = __webpack_public_path__ + \"static/logo-219b093fcceb2f008ded958fa9b13fca.png\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { useTranslation } from 'react-i18next';\nimport { navigate } from 'gatsby';\n\nconst Translate = () => {\n  const { t, i18n } = useTranslation();\n  const [value, setCount] = useState(i18n.language);\n\n  const changeLanguage = (locale) => {\n    i18n.changeLanguage(locale);\n    // eslint-disable-next-line no-undef\n    const page = window.location.pathname.split('/').slice(3).join('/');\n    navigate(`/${locale}/${page}`);\n  };\n\n  const handleChange = (event) => {\n    changeLanguage(`${event.target.value}`);\n    setCount(`${event.target.value}`);\n  };\n\n  return (\n    <Form className=\"select-language\">\n      <Form.Group className=\"mb-0\">\n        <Form.Control as=\"select\" value={value} onChange={handleChange}>\n          <option value=\"ru\">{t('russian')}</option>\n          <option value=\"by\">{t('belorussian')}</option>\n          <option value=\"en\">{t('english')}</option>\n        </Form.Control>\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default Translate;\n","import Translate from './translate';\n\nimport './translate.css';\n\nexport default Translate;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Navbar, Nav, Image } from 'react-bootstrap';\nimport Link from '../Link';\nimport Translate from '../translate';\nimport logo from '../../images/logo.png';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Header = () => {\n  const { t } = useTranslation();\n  return (\n    <header>\n      <Navbar expand=\"md\">\n        <Navbar.Brand><Link to=\"/\"><Image src={logo} /></Link></Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navbar\" />\n        <Navbar.Collapse id=\"navbar\">\n          <Nav>\n            <div className=\"wrapper\">\n              <Nav.Item><Link to=\"/\" activeStyle={{ color: '#40589A' }} className=\"menuLink\">{t('menu.main')}</Link></Nav.Item>\n              <Nav.Item><Link to=\"/search\" activeStyle={{ color: '#40589A' }} className=\"menuLink\">{t('menu.search')}</Link></Nav.Item>\n            </div>\n            <Nav.Item><Translate /></Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import Header from './header';\n\nimport './header.scss';\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Header from './header';\nimport './layout.css';\nimport './style/mainStyles.scss';\n// import MainSlider from './main-slider';\n\nconst Layout = () => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <div\n        style={{\n          margin: '0 auto',\n          // maxWidth: 960,\n          // padding: '0px 1.0875rem 1.45rem',\n          paddingTop: 0,\n        }}\n      >\n        <Header siteTitle={data.site.siteMetadata.title} style={{ fontSize: '.7em' }} />\n        {/* <MainSlider /> */}\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({\n  description, lang, meta, title,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}