{"version":3,"sources":["webpack:///./src/templates/about-author.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/translate/translate.jsx","webpack:///./src/components/translate/index.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/Link.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_i18next__WEBPACK_IMPORTED_MODULE_1__","_components_Link__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","props","frontmatter","data","javascriptFrontmatter","t","useTranslation","a","createElement","className","to","title","birth","description","alt","style","width","src","authorImage","defaultProps","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","Translate","_useTranslation","i18n","_useState","useState","language","value","setCount","react_default","Form_default","Group","Control","as","onChange","event","locale","changeLanguage","page","window","pathname","split","slice","join","navigate","target","Header","siteTitle","background","marginBottom","rel","href","integrity","crossOrigin","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","components_translate","Layout","children","_856328897","Fragment","header","site","siteMetadata","paddingTop","Link","rest","_objectWithoutPropertiesLoose","lng","react__WEBPACK_IMPORTED_MODULE_5___default","gatsby__WEBPACK_IMPORTED_MODULE_6__"],"mappings":"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","file":"component---src-templates-about-author-js-173b075a625654dc338c.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Link from '../components/Link';\n\nimport Layout from '../components/layout';\n\n\nexport default function Template(props) {\n  const { data } = props;\n  const { frontmatter } = data.javascriptFrontmatter;\n  const { t } = useTranslation();\n  return (\n    <Layout>\n      <div className=\"blog-post\">\n        <Link to=\"/\">{t('home')}</Link>\n        <br />\n        <Link to=\"/search\">Search</Link>\n        <h1>{frontmatter.title}</h1>\n        <p>{frontmatter.birth}</p>\n        <p>{frontmatter.description}</p>\n        <img alt=\"\" style={{ width: '200px' }} src={frontmatter.authorImage} />\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($searchPath: String!, $lang: String!) {\n    javascriptFrontmatter(frontmatter: {path: {eq: $searchPath}, lng: {eq: $lang}}) {\n    frontmatter {\n      birth\n      title\n      description\n      authorImage\n    }\n  }\n  }\n`;\n\nTemplate.defaultProps = {\n  data: {},\n};\n\nTemplate.propTypes = {\n  data: PropTypes.shape({\n    javascriptFrontmatter: PropTypes.object,\n  }),\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { useTranslation } from 'react-i18next';\nimport { navigate } from 'gatsby';\n\nconst Translate = () => {\n  const { t, i18n } = useTranslation();\n  const [value, setCount] = useState(i18n.language);\n\n  const changeLanguage = (locale) => {\n    i18n.changeLanguage(locale);\n    // eslint-disable-next-line no-undef\n    const page = window.location.pathname.split('/').slice(3).join('/');\n    navigate(`/${locale}/${page}`);\n  };\n\n  const handleChange = (event) => {\n    changeLanguage(`${event.target.value}`);\n    setCount(`${event.target.value}`);\n  };\n\n  return (\n    <Form className=\"select-language\">\n      <Form.Group>\n        <Form.Control as=\"select\" value={value} onChange={handleChange}>\n          <option value=\"ru\">{t('russian')}</option>\n          <option value=\"by\">{t('belorussian')}</option>\n          <option value=\"en\">{t('english')}</option>\n        </Form.Control>\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default Translate;\n","import Translate from './translate';\n\nimport './translate.css';\n\nexport default Translate;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Translate from './translate';\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <link\n      rel=\"stylesheet\"\n      href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n      integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n      crossOrigin=\"anonymous\"\n    />\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n        <Translate />\n      </h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport './layout.css';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: '0 auto',\n          maxWidth: 960,\n          padding: '0px 1.0875rem 1.45rem',\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © Портал белорусских фотографов 2019\n        </footer>\n      </div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","/**\n* Wrapper for Link to use language in path\n* Based on i18n Link: gatsby-i18n-plugin/packages/gatsby-i18n/src/Link.js\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link as GatsbyLink } from 'gatsby';\nimport i18n from 'i18next';\n\nconst Link = ({ to, children, ...rest }) => {\n  const lng = i18n.language;\n  return (\n    <GatsbyLink to={lng ? `/${lng}${to}` : `${to}`} {...rest}>\n      {children}\n    </GatsbyLink>\n  );\n};\n\nLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Link;\n"],"sourceRoot":""}