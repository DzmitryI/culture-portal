{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/translate/translate.jsx","webpack:///./src/components/translate/index.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","Translate","_useTranslation","useTranslation","t","i18n","_useState","useState","language","value","setCount","react_default","Form_default","className","Group","Control","as","onChange","event","locale","changeLanguage","page","window","pathname","split","slice","join","navigate","target","Header","siteTitle","style","background","marginBottom","rel","href","integrity","crossOrigin","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","components_translate","defaultProps","Layout","children","data","_856328897","Fragment","header","site","siteMetadata","paddingTop","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat"],"mappings":"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","file":"component---src-pages-404-js-aa4d346dae302088b13b.js","sourcesContent":["import React from 'react';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { useTranslation } from 'react-i18next';\nimport { navigate } from 'gatsby';\n\nconst Translate = () => {\n  const { t, i18n } = useTranslation();\n  const [value, setCount] = useState(i18n.language);\n\n  const changeLanguage = (locale) => {\n    i18n.changeLanguage(locale);\n    // eslint-disable-next-line no-undef\n    const page = window.location.pathname.split('/').slice(3).join('/');\n    navigate(`/${locale}/${page}`);\n  };\n\n  const handleChange = (event) => {\n    changeLanguage(`${event.target.value}`);\n    setCount(`${event.target.value}`);\n  };\n\n  return (\n    <Form className=\"select-language\">\n      <Form.Group>\n        <Form.Control as=\"select\" value={value} onChange={handleChange}>\n          <option value=\"ru\">{t('russian')}</option>\n          <option value=\"by\">{t('belorussian')}</option>\n          <option value=\"en\">{t('english')}</option>\n        </Form.Control>\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default Translate;\n","import Translate from './translate';\n\nimport './translate.css';\n\nexport default Translate;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Translate from './translate';\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <link\n      rel=\"stylesheet\"\n      href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n      integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n      crossOrigin=\"anonymous\"\n    />\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n        <Translate />\n      </h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport './layout.css';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: '0 auto',\n          maxWidth: 960,\n          padding: '0px 1.0875rem 1.45rem',\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © Портал белорусских фотографов 2019\n        </footer>\n      </div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({\n  description, lang, meta, title,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}