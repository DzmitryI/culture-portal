{"version":3,"sources":["webpack:///./src/pages/search.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Link.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/logo.png","webpack:///./src/components/translate/translate.jsx","webpack:///./src/components/translate/index.js","webpack:///./src/components/header/header.jsx","webpack:///./src/components/header/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["Authors","props","authorsList","authors","filter","it","node","frontmatter","lng","i18n","language","map","edge","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Link__WEBPACK_IMPORTED_MODULE_5__","key","uniqueId","to","path","name","defaultProps","query","ListPage","_this","data","_React$Component","call","this","allJavascriptFrontmatter","state","edges","render","t","_components_layout__WEBPACK_IMPORTED_MODULE_6__","_components_seo__WEBPACK_IMPORTED_MODULE_7__","title","React","Component","withTranslation","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","createContext","StaticQueryDataRenderer","_ref","staticQueryData","finalData","Fragment","children","Consumer","m","module","exports","require","default","Link","rest","_objectWithoutPropertiesLoose","react__WEBPACK_IMPORTED_MODULE_5___default","gatsby__WEBPACK_IMPORTED_MODULE_6__","Object","assign","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","p","Translate","_useTranslation","useTranslation","_useState","useState","value","setCount","react_default","Form_default","className","Group","Control","as","onChange","event","locale","target","changeLanguage","navigate","Header","Navbar","expand","Brand","Image","src","logo","Toggle","aria-controls","Collapse","id","Nav","Item","activeStyle","color","components_translate","Layout","_856328897","style","margin","maxWidth","padding","paddingTop","components_header","siteTitle","site","siteMetadata","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat"],"mappings":"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","file":"component---src-pages-search-js-31e847e6975951a79c56.js","sourcesContent":["import React from 'react';\nimport { uniqueId } from 'lodash';\n\nimport { withTranslation } from 'react-i18next';\nimport { graphql } from 'gatsby';\nimport i18n from 'i18next';\nimport PropTypes from 'prop-types';\nimport Link from '../components/Link';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\n\nconst Authors = (props) => {\n  const { authors } = props;\n  const authorsWithSelectedLang = authors.filter(it => it.node.frontmatter.lng === i18n.language);\n  const authorsList = authorsWithSelectedLang\n    .map(edge => (\n      <Link key={uniqueId()} to={edge.node.frontmatter.path}>\n        {edge.node.frontmatter.name}\n        <br />\n      </Link>\n    ));\n  return (\n    <ul>\n      <h1>List</h1>\n      {authorsList}\n    </ul>\n  );\n};\nAuthors.defaultProps = {\n  authors: [],\n};\nAuthors.propTypes = {\n  authors: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport const query = graphql`\nquery {\n  allJavascriptFrontmatter {\n    edges {\n      node {\n        frontmatter {\n          name\n          path\n          lng\n        }\n      }\n    }\n  }\n}\n`;\n\nclass ListPage extends React.Component {\n  constructor(props) {\n    super(props);\n    const { data } = this.props;\n\n    if (data.allJavascriptFrontmatter) {\n      this.state = { authors: data.allJavascriptFrontmatter.edges };\n    } else {\n      this.state = { authors: {} };\n    }\n  }\n\n  render() {\n    const { t } = this.props;\n    const { authors } = this.state;\n    return (\n      <Layout>\n        <SEO title=\"Page two\" />\n        <Link to=\"/\">{t('home')}</Link>\n        <h1>{t('List of Authors')}</h1>\n        <Authors authors={authors} />\n      </Layout>\n    );\n  }\n}\n\nexport default withTranslation()(ListPage);\n\nListPage.defaultProps = {\n  data: {},\n};\n\nListPage.propTypes = {\n  data: PropTypes.shape({\n    allJavascriptFrontmatter: PropTypes.object,\n  }),\n  t: PropTypes.func.isRequired,\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n* Wrapper for Link to use language in path\n* Based on i18n Link: gatsby-i18n-plugin/packages/gatsby-i18n/src/Link.js\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link as GatsbyLink } from 'gatsby';\nimport i18n from 'i18next';\n\nconst Link = ({ to, children, ...rest }) => {\n  const lng = i18n.language;\n  return (\n    <GatsbyLink to={lng ? `/${lng}${to}` : `${to}`} {...rest}>\n      {children}\n    </GatsbyLink>\n  );\n};\n\nLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Link;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/logo-d0d29f8a8bcfbff327902b08e3e073f5.png\";","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { useTranslation } from 'react-i18next';\nimport { navigate } from 'gatsby';\n\nconst Translate = () => {\n  const { t, i18n } = useTranslation();\n  const [value, setCount] = useState(i18n.language);\n\n  const changeLanguage = (locale) => {\n    i18n.changeLanguage(locale);\n    // eslint-disable-next-line no-undef\n    // const page = global.location.pathname.split('/').slice(2).join('/');\n    const page = 'search';\n    navigate(`/${locale}/${page}`);\n  };\n\n  const handleChange = (event) => {\n    changeLanguage(`${event.target.value}`);\n    setCount(`${event.target.value}`);\n  };\n\n  return (\n    <Form className=\"select-language\">\n      <Form.Group className=\"mb-0\">\n        <Form.Control as=\"select\" value={value} onChange={handleChange}>\n          <option value=\"ru\">{t('russian')}</option>\n          <option value=\"by\">{t('belorussian')}</option>\n          <option value=\"en\">{t('english')}</option>\n        </Form.Control>\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default Translate;\n","import Translate from './translate';\n\nimport './translate.css';\n\nexport default Translate;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Navbar, Nav, Image } from 'react-bootstrap';\nimport Link from '../Link';\nimport Translate from '../translate';\nimport logo from '../../images/logo.png';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Header = () => {\n  const { t } = useTranslation();\n  return (\n    <header>\n      <Navbar expand=\"md\">\n        <Navbar.Brand><Link to=\"/\"><Image src={logo} /></Link></Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navbar\" />\n        <Navbar.Collapse id=\"navbar\">\n          <Nav>\n            <div className=\"wrapper\">\n              <Nav.Item><Link to=\"/\" activeStyle={{ color: '#A07092' }} className=\"menuLink\">{t('menu.main')}</Link></Nav.Item>\n              <Nav.Item><Link to=\"/search\" activeStyle={{ color: '#A07092' }} className=\"menuLink\">{t('menu.search')}</Link></Nav.Item>\n            </div>\n            <Nav.Item><Translate /></Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import Header from './header';\n\nimport './header.scss';\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Header from './header';\nimport './layout.css';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <div\n        style={{\n          margin: '0 auto',\n          maxWidth: 960,\n          padding: '0px 1.0875rem 1.45rem',\n          paddingTop: 0,\n        }}\n      >\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main>{children}</main>\n        <footer>\n          © Портал белорусских фотографов 2019\n        </footer>\n      </div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({\n  description, lang, meta, title,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}