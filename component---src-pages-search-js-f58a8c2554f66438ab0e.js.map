{"version":3,"sources":["webpack:///./src/pages/search.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/translate/translate.jsx","webpack:///./src/components/translate/index.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/Link.js","webpack:///./src/components/translate/i18n.js"],"names":["Authors","props","authorsList","authors","filter","it","node","frontmatter","lng","i18n","language","map","edge","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_Link__WEBPACK_IMPORTED_MODULE_3__","key","title","to","path","defaultProps","query","ListPage","_this","data","_React$Component","call","this","allJavascriptFrontmatter","state","edges","render","t","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","React","Component","withTranslation","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","createContext","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","Translate","_useTranslation","useTranslation","_useState","useState","value","setCount","react_default","Form_default","className","Group","Control","as","onChange","event","locale","changeLanguage","page","window","pathname","split","slice","join","navigate","target","Header","siteTitle","style","background","marginBottom","rel","href","integrity","crossOrigin","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","components_translate","Layout","children","_856328897","Fragment","header","site","siteMetadata","paddingTop","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","Link","rest","_objectWithoutPropertiesLoose","react__WEBPACK_IMPORTED_MODULE_5___default","gatsby__WEBPACK_IMPORTED_MODULE_6__","use","initReactI18next","init","resources","en","translations","jsonEN","by","jsonBY","ru","jsonRU","fallbackLng","debug","ns","defaultNS","interpolation","escapeValue"],"mappings":"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","file":"component---src-pages-search-js-f58a8c2554f66438ab0e.js","sourcesContent":["import React from 'react';\n\nimport { withTranslation } from 'react-i18next';\nimport { graphql } from 'gatsby';\nimport i18n from 'i18next';\nimport PropTypes from 'prop-types';\nimport Link from '../components/Link';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport '../components/translate/i18n';\n\nconst Authors = (props) => {\n  const { authors } = props;\n  const authorsWithSelectedLang = authors.filter(it => it.node.frontmatter.lng === i18n.language);\n  const authorsList = authorsWithSelectedLang\n    .map(edge => (\n      <Link key={edge.node.frontmatter.title} to={edge.node.frontmatter.path}>\n        {edge.node.frontmatter.title}\n        <br />\n      </Link>\n    ));\n  return (\n    <ul>\n      <h1>List</h1>\n      {authorsList}\n    </ul>\n  );\n};\nAuthors.defaultProps = {\n  authors: [],\n};\nAuthors.propTypes = {\n  authors: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport const query = graphql`\nquery {\n  allJavascriptFrontmatter {\n    edges {\n      node {\n        frontmatter {\n          title\n          path\n          lng\n        }\n      }\n    }\n  }\n}\n`;\n\nclass ListPage extends React.Component {\n  constructor(props) {\n    super(props);\n    const { data } = this.props;\n\n    if (data.allJavascriptFrontmatter) {\n      this.state = { authors: data.allJavascriptFrontmatter.edges };\n    } else {\n      this.state = { authors: {} };\n    }\n  }\n\n  render() {\n    const { t } = this.props;\n    const { authors } = this.state;\n    return (\n      <Layout>\n        <SEO title=\"Page two\" />\n        <Link to=\"/\">{t('home')}</Link>\n        <h1>{t('List of Authors')}</h1>\n        <Authors authors={authors} />\n      </Layout>\n    );\n  }\n}\n\nexport default withTranslation()(ListPage);\n\nListPage.defaultProps = {\n  data: {},\n};\n\nListPage.propTypes = {\n  data: PropTypes.shape({\n    allJavascriptFrontmatter: PropTypes.object,\n  }),\n  t: PropTypes.func.isRequired,\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { useTranslation } from 'react-i18next';\nimport { navigate } from 'gatsby';\n\nconst Translate = () => {\n  const { t, i18n } = useTranslation();\n  const [value, setCount] = useState(i18n.language);\n\n  const changeLanguage = (locale) => {\n    i18n.changeLanguage(locale);\n    // eslint-disable-next-line no-undef\n    const page = window.location.pathname.split('/').slice(3).join('/');\n    navigate(`/${locale}/${page}`);\n  };\n\n  const handleChange = (event) => {\n    changeLanguage(`${event.target.value}`);\n    setCount(`${event.target.value}`);\n  };\n\n  return (\n    <Form className=\"select-language\">\n      <Form.Group>\n        <Form.Control as=\"select\" value={value} onChange={handleChange}>\n          <option value=\"ru\">{t('russian')}</option>\n          <option value=\"by\">{t('belorussian')}</option>\n          <option value=\"en\">{t('english')}</option>\n        </Form.Control>\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default Translate;\n","import Translate from './translate';\n\nimport './translate.css';\n\nexport default Translate;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Translate from './translate';\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <link\n      rel=\"stylesheet\"\n      href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n      integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n      crossOrigin=\"anonymous\"\n    />\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n        <Translate />\n      </h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport './layout.css';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: '0 auto',\n          maxWidth: 960,\n          padding: '0px 1.0875rem 1.45rem',\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © Портал белорусских фотографов 2019\n        </footer>\n      </div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({\n  description, lang, meta, title,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","/**\n* Wrapper for Link to use language in path\n* Based on i18n Link: gatsby-i18n-plugin/packages/gatsby-i18n/src/Link.js\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link as GatsbyLink } from 'gatsby';\nimport i18n from 'i18next';\n\nconst Link = ({ to, children, ...rest }) => {\n  const lng = i18n.language;\n  return (\n    <GatsbyLink to={lng ? `/${lng}${to}` : `${to}`} {...rest}>\n      {children}\n    </GatsbyLink>\n  );\n};\n\nLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Link;\n","import i18n from 'i18next';\n// import LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\nimport jsonEN from '../../assets/i18n/en.json';\nimport jsonBY from '../../assets/i18n/by.json';\nimport jsonRU from '../../assets/i18n/ru.json';\n\nfunction getLanguage() {\n  // eslint-disable-next-line no-undef\n  const lng = window.location.pathname.split('/')[1];\n  return lng || 'ru';\n}\n\ni18n\n  // .use(LanguageDetector) // use to set basic language of user's browser language\n  .use(initReactI18next)\n  .init({\n    // we init with resources\n    resources: {\n      en: {\n        translations: jsonEN,\n      },\n      by: {\n        translations: jsonBY,\n      },\n      ru: {\n        translations: jsonRU,\n      },\n    },\n    lng: 'ru',\n    fallbackLng: 'ru',\n    debug: true,\n\n    // have a common namespace used around the full app\n    ns: ['translations'],\n    defaultNS: 'translations',\n\n    // keySeparator: false, // we use content as keys\n\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n"],"sourceRoot":""}